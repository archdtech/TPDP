name: Branch Protection and CI/CD

on:
  push:
    branches: [ main, develop, feature/*, hotfix/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Run linting
      run: npm run lint
      
    - name: Check for secrets
      run: |
        # Install git-secrets if not present
        if ! command -v git-secrets &> /dev/null; then
          echo "Installing git-secrets..."
          curl -sSL https://raw.githubusercontent.com/awslabs/git-secrets/master/git-secrets > /tmp/git-secrets
          sudo mv /tmp/git-secrets /usr/local/bin/git-secrets
          sudo chmod +x /usr/local/bin/git-secrets
        fi
        
        # Configure git-secrets
        git-secrets --install
        git-secrets --register-aws
        git-secrets --add 'password\s*=\s*[\"'\''][^\"'\'']+[\"'\'']'
        git-secrets --add 'api_key\s*=\s*[\"'\''][^\"'\'']+[\"'\'']'
        git-secrets --add 'secret\s*=\s*[\"'\''][^\"'\'']+[\"'\'']'
        
        # Scan for secrets
        git-secrets --scan
      
    - name: Check for sensitive files
      run: |
        echo "Checking for sensitive files..."
        if find . -name "*.env" -o -name "*.key" -o -name "*.pem" -o -name "*.p12" | grep -q .; then
          echo "‚ùå Sensitive files found:"
          find . -name "*.env" -o -name "*.key" -o -name "*.pem" -o -name "*.p12"
          exit 1
        else
          echo "‚úÖ No sensitive files found"
        fi
      
    - name: Check TypeScript compilation
      run: npx tsc --noEmit

  test:
    runs-on: ubuntu-latest
    needs: security-check
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Generate coverage report
      run: npm run test:coverage

  branch-protection:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check branch protection rules
      run: |
        BRANCH=${GITHUB_REF#refs/heads/}
        echo "Checking branch: $BRANCH"
        
        case $BRANCH in
          main)
            echo "‚ùå Direct push to main is not allowed"
            echo "Please create a pull request from develop to main"
            exit 1
            ;;
          develop)
            echo "‚úÖ Push to develop is allowed"
            ;;
          feature/*)
            echo "‚úÖ Push to feature branch is allowed"
            ;;
          hotfix/*)
            echo "‚úÖ Push to hotfix branch is allowed"
            ;;
          *)
            echo "‚ùå Unknown branch pattern: $BRANCH"
            echo "Allowed patterns: main, develop, feature/*, hotfix/*"
            exit 1
            ;;
        esac

  pr-validation:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate PR target
      run: |
        TARGET_BRANCH=${{ github.base_ref }}
        SOURCE_BRANCH=${{ github.head_ref }}
        
        echo "PR from $SOURCE_BRANCH to $TARGET_BRANCH"
        
        # Validate PR targets
        case $TARGET_BRANCH in
          develop)
            # Feature branches can merge to develop
            if [[ ! $SOURCE_BRANCH =~ ^feature/ ]]; then
              echo "‚ùå Only feature branches can merge to develop"
              exit 1
            fi
            ;;
          main)
            # Only release branches can merge to main
            if [[ ! $SOURCE_BRANCH =~ ^release/ ]]; then
              echo "‚ùå Only release branches can merge to main"
              exit 1
            fi
            ;;
          *)
            echo "‚ùå Invalid target branch: $TARGET_BRANCH"
            exit 1
            ;;
        esac
        
        echo "‚úÖ PR validation passed"

  deployment:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [security-check, test]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Deploy to production
      run: |
        echo "üöÄ Deploying to production..."
        # Add your deployment commands here
        echo "‚úÖ Deployment completed"

  notify:
    runs-on: ubuntu-latest
    if: always()
    needs: [security-check, test, branch-protection, pr-validation]
    
    steps:
    - name: Notify team
      run: |
        if [ "${{ needs.security-check.result }}" = "failure" ]; then
          echo "üö® SECURITY CHECK FAILED"
          echo "Branch: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          echo "URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        fi
        
        if [ "${{ needs.test.result }}" = "failure" ]; then
          echo "üß™ TESTS FAILED"
          echo "Branch: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          echo "URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        fi
        
        if [ "${{ needs.branch-protection.result }}" = "failure" ]; then
          echo "üö´ BRANCH PROTECTION VIOLATION"
          echo "Branch: ${{ github.ref }}"
          echo "Actor: ${{ github.actor }}"
          echo "URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        fi